@layout('admin.master')
@section('body')
<div id="root_app" class="container">
<div class="row">
    <h2 class="col-sm-12 page-header">จัดการเทอมการศึกษา</h2>
    <div class="tch-panel-control row">
    <div class="col-sm-6">
        <form @submit.prevent="search_items($event)">
        <div class="input-group">
            <input name="search" type="text" class="form-control" placeholder="ค้นหาจาก หมายเลขห้อง ตำแหน่ง ประเภท" />
            <span class="input-group-btn">
                <button class="btn btn-default">ค้นหา <i class="fa fa-search"></i></butotn>
            <span>
        </div>
        </form>
    </div>
    <div class="col-sm-6 text-right">
        <button onclick="$('#add_modal').modal('show')" class="btn btn-default"><i class="fas fa-plus text-success"></i> เพิ่มห้องเรียน</button>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="tch-shadow-sm  panel panel-default">
            <div class="panel-body">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th class="text-center">ลำดับ</th>
                            <th>ปีการศึกษา</th>
                            <th>เทอมที่</th>
                            <th>เริ่มต้นลงทะเบียน</th>
                            <th>สิ้นสุดลงทะเบียน</th>
                            <th>แก้ไข</th>
                        </tr>
                    </thead>
                    <tbody>
                        <template v-if="items.length > 0">
                            <tr v-for="(item, index) in items" :key="index">
                                <td class="text-center">@{{ ++index }}</td>
                                <td>@{{ item.term_year }}</td>
                                <td>@{{ item.term }}</td>
                                <td>@{{ item.register_start }}</td>
                                <td>@{{ item.register_end }}</td>
                                <td><button
                                    :data-status="item.status == 'A' ? 'D' : 'A'"
                                    :data-id="item.study_room_id"
                                    @click="update_status($event)"
                                    :class="['btn', 'btn-xs', item.status == 'A' ? 'btn-success' : 'btn-danger']">
                                    <i class="fas fa-sync-alt"></i> @{{ item.status == 'A' ? 'ใช้งาน' : 'ไม่ใช้งาน' }}</button>
                                </td>
                                <td><button @click="on_clik_edit($event)" :data-id="item.study_room_id" class="btn btn-default"><i class="fas fa-edit"></i></button></td>
                            </tr>
                        </template>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
</div>







<div id="add_modal" class="modal animated fadeIn" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">เพิ่มเทอมการศึกษา</h4>
      </div>
      <div class="modal-body">
        <form @submit.prevent="add_item_submit($event)" class="form form-horizontal">
            <div class="form-group">
                <div class="col-sm-12">
                    <select v-validate="'required|not_in:-1'" name="year" class="form-control">
                      <option value="-1">เลือกปีการศึกษา</option>
                      <option v-for="(y, i) in years" :value="y" :key="i" >@{{ parseInt(y) + 543 }}</option>
                    </select>
                    <p v-if="errors.has('year')" class="help-text text-danger">@{{ errors.first('year') }}</p>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-12">
                    <select v-validate="'required|not_in:-1'" class="form-control" name="term">
                      <option value="-1">เลือกเทอมการศึกษา</option>
                      <option value="1">1</option>
                      <option value="2">2</option>
                    </select>
                    <p v-if="errors.has('term')" class="help-text text-danger">@{{ errors.first('term') }}</p>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-12">
                  <div class="input-group">
                    <input data-vv-as="start date" v-validate="'required|date_format:DD-MM-YYYY'" name="start_date" class="date-picker form-control" type="text" placeholder="Start Date" />
                      <span class="input-group-addon">ถึง</span>
                      <input data-vv-as="end date" v-validate="'required|date_format:DD-MM-YYYY|after:start_date'" name="end_date" class="date-picker form-control" type="text" placeholder="End Date" />
                  </div>
                   <p v-if="errors.has('start_date')" class="help-text text-danger">@{{ errors.first('start_date') }}</p>
                    <p v-if="errors.has('end_date')" class="help-text text-danger">@{{ errors.first('end_date') }}</p>
                </div>
            </div>
            <button class="hidden" id="add_button"></button>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">ปิด</button>
        <button type="button" onclick="$('#add_button').click()" class="btn btn-success">เพิ่มห้อง</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


</div>






<div id="update_modal" class="modal animated fadeIn" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">แก้ไขห้อง</h4>
      </div>
      <div v-if="item != null" class="modal-body">
        <form @submit.prevent="update_item_submit($event)" class="form form-horizontal">
            <input type="hidden" name="id" :value="item.study_room_id" />
            <div class="form-group">
                <div class="col-sm-12">
                    <input v-model="item.study_room_code" data-vv-as="study room code" name="code" v-validate="'required'" type="text" class="form-control" placeholder="หมายเลขห้อง" />
                    <p v-if="errors.has('code')" class="help-text text-danger">@{{ errors.first('code') }}</p>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-12">
                    <input v-model="item.study_room_location" data-vv-as="study room location" name="location" v-validate="'required'" type="text" class="form-control" placeholder="ตำแหน่งที่ตั้ง" />
                    <p v-if="errors.has('location')" class="help-text text-danger">@{{ errors.first('location') }}</p>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-12">
                    <select v-validate="'required|not_in:-1'" class="form-control" name="type">
                      <option value="-1">เลือกประเภทห้อง</option>
                      <option :selected="item.study_room_type == 'ห้องเรียน'" value="ห้องเรียน">ห้องเรียน</option>
                      <option :selected="item.study_room_type == 'ห้องแลป'" value="ห้องแลป">ห้องแลป</option>
                    </select>
                   <p v-if="errors.has('type')" class="help-text text-danger">@{{ errors.first('type') }}</p>
                </div>
            </div>
            <button class="hidden" id="edit_button"></button>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">ปิด</button>
        <button type="button" onclick="$('#edit_button').click()" class="btn btn-success">แก้ไขข้อมูล</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
</div>


@endsection
@section('style')
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/css/bootstrap-datepicker.min.css" />
@endsection
@section('script')
<script src="https://momentjs.com/downloads/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.min.js"></script>
<script>

    Vue.use(VeeValidate);

    function initDatePicker() {
      $('.date-picker').datepicker({
        format: 'dd-mm-yyyy'
      });
    }

    var root_app = new Vue({
        el: '#root_app',
        data: function() {
            return {
                items: []
            };
        },
        computed: {
          years: function() {
            var dt = luxon.DateTime.local().minus({ year: 1 });
            var y = [];
            var i = 0;
            for(;i < 21; i++) {
              y.push(dt.plus({ year: i }).toFormat('yyyy'))
            }
            return y;
          }
        },
        methods: {
            on_clik_edit: function(evt) {
                console.log("item_id", evt.currentTarget.dataset.id);
                this.$emit('edit', evt.currentTarget.dataset.id);
            },
            on_select_role: function(evt) {
                this.is_teacher = evt.target.value == 1;
            },
            search_items: function(evt) {
                var self = this;
                axios.get('{{ route("admin_study_room_search") }}?search=' + evt.target.search.value).then(function(res) {
                  var data = res.data;
                  if(data.is_error) {
                    console.log(data.error_message);
                    return window.swal("Error", data.error_message);
                  }
                  self.items = data.data;
                })
                .catch(function(error) {
                    console.log(error);
                    return window.swal("Error", error.toString());
                });
            },
            fetch_items: function() {
                var self = this;
                NProgress.start();
                axios.get('{{ route("admin_term_all") }}').then(function(res) {
                    NProgress.done();
                    console.log(res);
                    var data = res.data;
                    if(data.is_error) {
                        window.swal("Error", data.error_message, "error");
                        console.log(data.error_message);
                        return;
                    }
                    self.items = data.data;
                });
            },
            update_status: function(evt) {
                var self = this;
                var status = evt.currentTarget.dataset.status;
                var id = evt.currentTarget.dataset.id;
                axios.post('{{ route("admin_update_status_study_room") }}', { id: id, status: status })
                .then(function(res) {
                    var data = res.data;
                    if(data.is_error) {
                        console.log(data.error_message);
                        return window.swal("Error", data.error_message, "error");
                    }
                    window.swal("Success", "อัพเดทสถานะเรียบร้อยแล้ว", "success");
                    self.fetch_items();
                }).catch(function(error) {
                    console.log(error);
                    window.swal("Error", error, "error");
                });
            },
            add_item_submit: function(evt) {
                var self = this;
                this.$validator.validateAll().then(function(passed) {
                    if(!passed) {
                       return window.swal("Error", "กรุณากรอกข้อมูลให้ถูกต้อง", "error");
                    }
                    var dt = luxon.DateTime;
                    var data = new FormData(evt.target);
                    var start = data.get('start_date');
                    var end = data.get('end_date');
                    if(dt.fromString(start, "dd-LL-yyyy") > dt.fromString(end, "dd-LL-yyyy")) {
                      return window.swal("Error", "วันที่ไม่ถูกต้อง", "error");
                    }
                    axios.post('{{ route("admin_add_term") }}', data).then(function(res) {
                        console.log(res);
                        var data = res.data;
                        if(data.is_error) {
                            window.swal("Error", data.error_message, "error");
                            return console.log(data.error_message);
                        }
                        window.swal("Success", "เพิ่มวิชาเรียบร้อยแล้ว", "success");
                        $('#add_modal').modal('hide');
                        self.fetch_items();
                    });
                });
            }
        },
        created: function() {
            var self = this;
            this.fetch_items();
            this.$nextTick(function() {
                update_modal.$on('updated', function() {
                    self.fetch_items();
                });
            });
        },
        mounted: function() {
          console.log("mounted");
          initDatePicker();
        }
    });






    var update_modal = new Vue({
        el: '#update_modal',
        data: function() {
            return {
                item: null
            }
        },
        methods: {
            update_item_submit: function(evt) {
                var self = this;
                this.$validator.validateAll().then(function(passed) {
                    if(!passed) return window.swal("Error", "กรุณาใส่ข้อมูลให้ถูกต้อง");
                    var data = new FormData(evt.target);
                    axios.post("{{ route('admin_update_study_room') }}", data).then(function(res) {
                        console.log(res);
                        var data = res.data;
                        if(data.is_error) {
                            console.log(data.error_message);
                            return window.swal("Error", data.error_message, "error");
                        }
                        window.swal("Success", "อัพเดทเรียบร้อยแล้ว", "success");
                        $('#update_modal').modal('hide');
                        self.$emit('updated');
                    });
                });
            }
        },
        created: function() {
            var self = this;
            root_app.$on('edit', function(id) {
                self.item = root_app.$data.items.find(function(_item) {
                    console.log(_item);
                    return _item.study_room_id == id;
                });
                console.log(self.item);
                $('#update_modal').modal('show');
            });
        },
        mounted: function() {
          initDatePicker();
        }

    })

</script>


@endsection
