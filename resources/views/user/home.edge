@layout('user.master')

@section('body')
<style>

</style>


<div id="app_root"></div>


<script id="app_root_template" type="text/x-template">
<div class="tch-body container">
        <control-panel 
            :on_select_term="on_select_term"
            :on_select_room="on_select_room" 
            :term_selected="term_selected"
        />
    <div class="row">
        <div class="col-sm-12">
            <schedule-table />
        </div>
    </div>

    <add-modal />
</div>
</script>


<script type="text/x-template" id="control_panel_template">
    <div class="tch-bg-dark tch-panel-control row">
        <div class="col-sm-10">
            <div class="form form-inline">
                <div class="form-group">
                    <label class="label-control">ปีการศึกษา</label>
                    <select @change="_on_select_term($event)"  class="form-control">
                        <option value="-1">เลือกปีการศึกษา</option>
                        <option v-for="(term, index) in terms" :key="index" :value="term.term_id">
                            @{{ 'ปี ' + term.term_year + " เทอม " + term.term }}
                        </option>
                    </select>    
                </div>
                <div class="form-group">
                    <select @change="_on_select_room($event)" class="form-control">
                        <option>ห้อง</option>
                        <option v-for="(room, index) in rooms" :key="index" :value="room.study_room_id" >@{{ room.study_room_code }}</option>
                    </select>
                </div>
                <div class="form-group">
                    <button class="btn btn-primary"><i class="fas fa-search"></i> ค้นหา</button>
                </div>
            </div>  
        </div>
        <div class="col-sm-2 text-right">
            <button data-toggle="modal" data-target="#add_modal" class="btn btn-success">
            <i class="fa fa-plus-circle"></i> เพิ่ม</button>
        </div>
    </div>
</script>

<script type="text/x-template" id="schedule_table_template">
    <div class="table-responsive schedule_table" style="margin-top: 20px; position: relative;">
        <div ref="schedule" class="schedule" style="position: inherit;">
            <div class="schedule-row">
                <div class="schedule-col-h text-center" :style="{width: width_title_col + 'px'}">วัน</div>
                <div :style="{ 'width': width_el + 'px' }" class="schedule-col-h text-center"
                v-for="(intl, i) in time_interval_list" :key="i">@{{ intl.start.toFormat('HH:mm') }}</div>
            </div>
                <div class="schedule-row" style="position: inherit;"  v-for="(day, day_index) in days" :key="day_index">
                    <div class="schedule-col-h" :style="{ 'width': width_title_col + 'px' }">@{{ day }}</div>
                    <div 
                        class="schedule-col highlight-table"
                        v-for="(c, i) in couses" 
                        data-toggle="tooltip" data-placement="top" :title="c.start_time.toFormat('HH:mm') + '-' + c.end_time.toFormat('HH:mm')"
                        v-if="c.date.weekday == (day_index+1)"
                        v-bind:style="{ 'width': cal_time_width(c.start_time, c.end_time) + 'px', 'margin-left': cal_time_offset(c.start_time) + 'px' }">@{{  cal_time_offset(c.start_time) + 'px' }}</div>
                    <div class="schedule-col" v-for="n in (time_interval_list.length)" :key="n" :style="'flex-basis:' + width_el + 'px;'" ></div>
                </div>
        </div>
    </div>
</script>
<script id="add_modal_template" type="text/x-template">
<div  id="add_modal" class="modal" tabindex="-1" role="dialog">
  <div class="modal-dialog animated fadeIn modal-md" role="document">
    <div class="modal-content">
      <div class="modal-body">
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          <h3>
              เพิ่มคอร์ส
          </h3>
            <div style="padding-left: 20px; padding-right: 20px;" class="form form-horizontal">
                <div class="form-group">
                    <select class="form-control">
                        <option value="-1">เลือกเทอม</option>
                        <option v-for="(term, index) in terms" :value="term.term_id">@{{ 'ปี ' +  term.term_year + ' เทอม ' + term.term }}</option>
                    </select>
                </div>
                <div class="form-group">
                    <select class="form-control">
                        <option value="-1">เลือกห้อง</option>
                        <option v-for="(room, index) in rooms" :value="room.study_room_id">@{{ room.study_room_code }}</option>
                    </select>
                </div>
                <div class="form-group">
                    <input class="date-picker form-control" type="text" placeholder="วันที่" />
                </div>
                <div class="form-group">
                    <input class="time-picker form-control" type="text" placeholder="เวลา" />
                </div>
               <div class="text-right form-group">
                    <button onclick="$('#add_modal').modal('hide')" class="btn btn-default">ปิด</button>
                    <button class="btn btn-success"><i class="fa fa-plus-circle"></i> เพิ่ม</button> 
               </div>                      

            </div>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
</script>


@endsection
@section('style')
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/css/bootstrap-datepicker.min.css" />
<link rel="stylesheet" type="text/css" href="{{ assetsUrl('style/dist/bootstrap-datetimepicker.min.css') }}" />
@endsection
@section('script')
<script src="{{ assetsUrl('script/dist/bootstrap-datetimepicker.min.js') }}"></script>
<script src="https://momentjs.com/downloads/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.min.js"></script>
<script>


    var ROOMS = {{{ rooms }}};
    var TERMS = {{{ terms }}}

    Vue.use(VeeValidate);

    function initJquery() {
        $('[data-toggle="tooltip"]').tooltip();
        $('.date-picker').datepicker({
            format: 'dd-mm-yyyy'
        });
        $('.time-picker').datetimepicker({
            pickDate: false
        });
    }

    var add_modal = Vue.component('add-modal', {
        template: '#add_modal_template',
        data: function() {
            return {
                rooms: ROOMS,
                terms: TERMS
            }
        },
        mounted: function() {
            initJquery();
        }
    })

    var control_panel = Vue.component('control-panel', {
        template: '#control_panel_template',
        props: {
            on_select_term: Function,
            on_select_room: Function,
            term_selected: String
        },
        data: function() {
            return {
                rooms: ROOMS,
                terms: TERMS
            }
        },
        computed: {
            /*years: function() {
                return  TERMS.map(function(term) {
                    return term.term_year;
                });
            },
            terms: function() {
                var self = this;
                return TERMS.filter(function(term) {
                    return term.term_year == self.year_selected;
                });
            }*/
        },
        methods: {
            _on_select_term: function(evt) {
                console.log("term", evt.target.value);
                this.on_select_term(evt.target.value);
            },
            _on_select_room: function(evt) {
                console.log("room", evt.target.value);
                this.on_select_room(evt.target.value);
            }
        }
    })

    var schedule_table = Vue.component("schedule-table", {
        template: "#schedule_table_template",
        data: function() {
            return {
                days: ['MON', 'TUE',  'WED', 'THU', 'FRI', 'SAT', 'SUN'],
             couses: [
                    {
                        date: luxon.DateTime.local(),
                        start_time: luxon.DateTime.fromObject({ hours: 7, minute: 15 }),
                        end_time: luxon.DateTime.fromObject({ hours: 11 })
                    },
                                       {
                        date: luxon.DateTime.local(),
                        start_time: luxon.DateTime.fromObject({ hours: 12 }),
                        end_time: luxon.DateTime.fromObject({ hours: 13 })
                    },
                                       {
                        date: luxon.DateTime.local().plus({ days: 1 }),
                        start_time: luxon.DateTime.fromObject({ hours: 15 }),
                        end_time: luxon.DateTime.fromObject({ hours: 18, minutes: 30 })
                    },
                                        {
                        date: luxon.DateTime.local().plus({ days: 1 }),
                        start_time: luxon.DateTime.fromObject({ hours: 7 }),
                        end_time: luxon.DateTime.fromObject({ hours: 11 })
                    },
                                       {
                        date: luxon.DateTime.local().minus({ days: 2 }),
                        start_time: luxon.DateTime.fromObject({ hours: 12 }),
                        end_time: luxon.DateTime.fromObject({ hours: 13 })
                    },
                                       {
                        date: luxon.DateTime.local().minus({ days: 1 }),
                        start_time: luxon.DateTime.fromObject({ hours: 15 }),
                        end_time: luxon.DateTime.fromObject({ hours: 18, minutes: 30 })
                    },
                                                           {
                        date: luxon.DateTime.local(),
                        start_time: luxon.DateTime.fromObject({ hours: 6 }),
                        end_time: luxon.DateTime.fromObject({ hours: 7, minutes: 30 })
                    }
                ]
            }
        },
        computed: {
            width_title_col: function(){ return 60; },
            interal_width: function(){ return 60}, // minutes
            start_time: function(){ return luxon.DateTime.fromObject({ hours: 6 }); },
            end_time: function(){ return luxon.DateTime.fromObject({  hours: 23, minutes: 59 }); },
            width_el: function(){ 
                return 60; 
            },
            time_interval_list: function() {
                var dt = luxon.DateTime;
                var interval = luxon.Interval.fromDateTimes(this.start_time, this.end_time);
                var interval_list = interval.splitBy({ minutes: this.interal_width });
                return interval_list;
            },
            width_of_table: function() {
                return this.width_el * this.time_interval_list.length;
            }
        },
        methods: {
            cal_time_width: function(start, end) {
                //console.log('cal_time_width', start.toFormat('HH:mm') +'-'+ end.toFormat('HH:mm'), 'width_in_px:' + this.cal_px_from_minutes(((end - start) / 1000) / 60));
                return this.cal_px_from_minutes(((end - start) / 1000) / 60);
            },
            cal_time_offset: function(start) {
                //console.log('cal_time_offset', start.toFormat('HH:mm'), 'offset_in_px:' + (this.width_title_col + this.cal_px_from_minutes(((start - this.start_time) / 1000) / 60)));
                //console.log(((start - this.start_time) / 1000) / 60);
                return this.width_title_col + this.cal_px_from_minutes(((start - this.start_time) / 1000) / 60);
            },
            cal_px_from_minutes: function(m) {
                return (m / 60) * 60;
            },
            cal_px_to_percent: function(px) {
                return (px / this.width_of_table) * 100;
            }
        },
        mounted: function() {
            initJquery();
        }
    });

    var app_root = new Vue({
        el: "#app_root",
        template: "#app_root_template",
        data: function() {
            return {
                term_selected: null,
                room_selected: null
            }
        },
        methods: {
            on_select_term: function(term) {
                this.term_selected = term;
            },
            on_select_room: function(room) {
                this.room_selected = room;
            },
        },
        mounted: function(){
            this.$nextTick(function() {
                initJquery();
            });
        }

    }); 


</script>

@endsection